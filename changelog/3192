
author: alistair.obrien
description: "\\nfeat(lang): Improves support for discriminant unions by adding *union types*. \\n\\nA union type describes a value that can be one of several types. We use the vertical bar (`|`) to separate the types. For instance, `int | string` is the type of a value that can be either an `int` or a `string`.\\n\\n\\n```typescript\\nconst a = { a: 1 } as { a: int } | { b: bool };\\n\\n```\\n\\n#### Common Fields\\n\\nWhen working with a union type of records, we can only access members common to all types in the union.\\n\\n\\n```typescript\\ntype Car = { \\n  driver: string; \\n  fuel: nat; \\n}\\n\\ntype Bike = { \\n  driver: string; \\n  hasTrainingWheels: bool; \\n}\\n\\nconst getDriver = (vehicle: Car | Bike): string => vehicle.driver;\\n\\n```\\n\\nIf a value has the type `Car | Bike`, we can only access `driver` because it is the only member common to both types. We cannot access `fuel` or `hasTrainingWheels` without additional type checks, as accessing `fuel` on a `Bike` would result in a runtime error.\\n\\n#### Discriminant Unions\\n\\nA common pattern for using union types is to include a single field with a singleton type to distinguish between the types. This allows the type checker to infer the specific type in a conditional statement.\\n\\n\\n```typescript\\ntype IntValue = { typ: \"INT\"; x: int };\\ntype StrValue = { typ: \"STR\"; s: string };\\n\\ntype Value = IntValue | StrValue;\\n\\n```\\n\\nAll types in the `Value` union have a common field `typ`. Since `typ` is a singleton type, we can compare its value to determine the specific type being used. Hereâ€™s how to use a switch statement to narrow down the type:\\n\\n\\n```typescript\\nconst valueToInt = (val: Value): int => {\\n    switch (val.typ) {\\n        case \"INT\":\\n            return val.x;\\n        case \"STR\":\\n            return int(String.length(val.s));\\n    }\\n    return -1;\\n}\\n\\n```\\n\\nIn this example, `typ` helps to discriminate between the `IntValue` and `StrValue` types, allowing us to safely access their specific fields.\\n\\n"
merge_request: '3192'
title: "Union types"
type: added
            