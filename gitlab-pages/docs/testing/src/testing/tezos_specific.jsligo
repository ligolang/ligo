namespace Counter {
  type storage = int;

  @entry
  const increment = (action: int, store: storage) : [list <operation>, storage] => [[], store + action];

  @entry
  const decrement = (action: int, store: storage) : [list <operation>, storage] => [[], store - action];
};
import Test = Test.Next;

const testC = () => {
  const initial_storage = 42;
  const orig = Test.Originate.contract(contract_of(Counter), initial_storage, 0tez);
  const p: (parameter_of Counter) = Increment(1);
  Test.Contract.transfer_exn(orig.taddr, p, 0tez);
  return assert(Test.Contract.get_storage(orig.taddr) == initial_storage + 1);
};