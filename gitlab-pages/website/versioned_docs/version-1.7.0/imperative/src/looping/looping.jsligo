function gcd (a: nat, b: nat) {
  let [x,y] = [a,b]; // We will modify x and y
  if (x < y) {
    const z = x;
    x = y; y = z; // Swapping x and y
  }
  let r: nat = 0n
  while (y != 0n) {
    r = x % y;
    x = y;
    y = r;
  }
  return x;
};
function iter (x: nat,y: nat): nat {
  if (y == 0n) return x else return iter (y, x % y)
};

function gcd2 (x: nat,y: nat) : nat {
  if (x < y) return iter (y, x) else return iter (x, y)
};
const getChar = (s: string, idx: nat) : string => String.sub(idx, 1n, s);

function isPalindrome (s: string): bool {
  let p = "";
  let length = String.length(s);
  for (let i = length - 1 ; i >= 0 ; i--)
    p += getChar(s, abs(i));
  return p == s;
};
function sum_list (l : list<int>) {
  let acc = 0;
  for (const i of l) acc += i;
  return acc; // total
};