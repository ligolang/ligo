namespace Counter {
  type storage = int;
  type ret = [list<operation>, storage];

  // Three entrypoints

  @entry
  const increment = (delta : int, store : storage) : ret => [list([]), store + delta];

  @entry
  const decrement = (delta : int, store : storage) : ret => [list([]), store - delta];

  @entry
  const reset = (_p : unit, _s : storage) : ret => [list([]), 0];
};
const test_increment = (() : unit => {
  let initial_storage = 10 as int;
  let orig = Test.originate(contract_of(Counter), initial_storage, 0tez);
  Test.transfer_exn(orig.addr, (Increment (1)), 1mutez);
  return assert(Test.get_storage(orig.addr) == initial_storage + 1);
}) ()