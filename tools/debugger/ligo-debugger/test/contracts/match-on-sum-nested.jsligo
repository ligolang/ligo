type variants =
    ["Variant1", int]
  | ["Variant2"]
  | ["Variant3", option<int>];

@entry
let main = (p : variants, s: int) : [list<operation>, int] => {
  const s2 = match (p) {
    when(Variant1(x)): s + x;
    when(Variant2): 0;
    when(Variant3(p2)): match(p2) {
      when(Some(x)): s + 3 * x;
      when(None): s
    };
  };

  return [([] as list<operation>), s2]
};
