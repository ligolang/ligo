## Webide

include:
  - '/.ci/.gitlab-ci-tools-common.yml'

webide-backend:
  stage: tools-build
  tags:
    - gcp-ubuntu
  rules: &webide_mr_dev
    - !reference [.webide_mr_changes]
    - !reference [.dev]
  needs: []
  script:
    - nix build ./tools/webide-new#packages.x86_64-linux.backend

webide-frontend:
  stage: tools-build
  tags:
    - gcp-ubuntu
  rules: *webide_mr_dev
  needs: []
  script:
    - nix build ./tools/webide-new#packages.x86_64-linux.frontend

webide-backend-checks:
  stage: tools-check
  tags:
    - gcp-ubuntu
  rules: *webide_mr_dev
  needs: [webide-backend]
  script:
    - cd ./tools/webide-new
    - nix build .#packages.x86_64-linux.ligo-bin --out-link ligo
    - nix build .#packages.x86_64-linux.tezos-client --out-link tezos-client
    - export LIGO_PATH=$PWD/ligo/bin/ligo
    - export OCTEZ_CLIENT_PATH=$PWD/tezos-client/bin/octez-client
    # These tests need docker, so they cannot be easily run as a flake check :(
    - nix build .#tests.x86_64-linux.ligo-webide-backend-test
    - cd ligo-webide-backend && ../result/bin/ligo-webide-backend-test

webide-frontend-checks:
  stage: tools-check
  tags:
    - gcp-ubuntu
  rules: *webide_mr_dev
  needs: [webide-frontend]
  script:
    - nix build -L ./tools/webide-new#checks.x86_64-linux.frontend-tscompile
    - nix build -L ./tools/webide-new#checks.x86_64-linux.frontend-tslint
    - nix build -L ./tools/webide-new#checks.x86_64-linux.frontend-openapi
