const reach_1 = (_n: int): string => {
  let _x = "Reachable code";
  return "end"
};

const unreach_1 = (_n: int): string => {
  return "end";
  let _x = "Unreachable post-return code that should trigger a warning"
};

const unreach_2 = (n: int): string => {
  if (n == 42) {
    let _x = "Reachable code";
    return "a"
  } else {
    return "b";
    let _x = "Unreachable post-return code that should trigger a warning"
  }
};

const unreach_3 = (n: int): string => {
  let output = "";
  switch (n) {
    case 1:
      let _x = "Reachable code";
      break;
      output = "Unreachable post-break code that should trigger a warnings";
    case 2:


    case 3:
      let _x = "Reachable code";
      return "end";
      output = "Unreachable post-return code that should trigger a warnings";
    case 4:
      let _x = "Reachable code";
      break;
      return "Unreachable post-break code that should trigger a warnings";
    default:
      let _x = "Reachable code";
  };
  return output
};

const unreach_4 = (_n: int): string => {
  return "end";
  return "Unreachable post-return code that should trigger a warnings"
};

const unreach_5 = (x: string, y: string): string => {
  if (x > y) return x else return y;
  return "Unreachable post-return code that should trigger a warnings"
};

const unreach_6 = (x: string, y: string, z: string): string => {
  if (x > y) if (x > z) return x else return z else if (y > z) return y else return z;
  return "Unreachable post-return code that should trigger a warnings"
};

@entry
const main = (_: int, s: int): [list<operation>, int] => {
  return [
    [], // No operations
    s
  ]
};
