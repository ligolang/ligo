type storage = int;

type parameter = list<int>;

type s = {
  a : int,
  b : bool,
  c : string,
  d : list<list<list<int>>>
};

const s_a : s = { a: 42, b: false, c: "foo", d:list(list(list(5))) };

const s_b = { ...s_a, a: 32 };

type return_ = [list<operation>, storage];

const hd = (x : list<int>) : int => {
  return match(x) {
    when ([] : list<int>) : -1;
    when ([x, ...xs] : list<int>) : x
  };
};

const main = ([a, b] : [parameter, storage]) : return_ =>
  [[], (hd(a) + (b + ) * 11)]
